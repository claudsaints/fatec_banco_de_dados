create table tbl_cidades(
cod_cidade serial primary key,
nome text not null);

create table tbl_departamentos(
cod_departamento serial primary key,
nome text not null,
data_inicio date,
cod_cidade int references tbl_cidades(cod_cidade));

create table tbl_projetos(
cod_projeto serial primary key,
nome text not null,
cod_departamento int references tbl_departamentos(cod_departamento));

create table tbl_empregados
(cod_empregado serial primary key,
 nome text,
 data_nascimento date,
 endereco text,
 sexo char,
 salario real,
 cod_departamento int references tbl_departamentos(cod_departamento)
 );

--1 crie uma store procedure chamada proc_upd_nome_depart para atualizar o nome de um departamento. 
--recebe como parametro um codigo inteiro e um novonome em texto atualizando o nome do departamento com esse respectivo codigo

CREATE OR REPLACE PROCEDURE proc_upd_nome_depart(cod_depart INT, novo_nome TEXT)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE tbl_departamentos
    SET nome = novo_nome
    WHERE cod_departamento = cod_depart;
END;
$$;

CALL proc_upd_nome_depart(1, 'Novo Nome');




--2 crie uma store procedure chamada proc_copiatbl que cria uma copia da tabela tbl_cidades toda vez que for executada;

CREATE OR REPLACE PROCEDURE proc_copiatbl()
LANGUAGE plpgsql
AS $$
BEGIN
    EXECUTE 'CREATE TABLE IF NOT EXISTS tbl_cidades_copia AS TABLE tbl_cidades';
END;
$$;

CALL proc_copiatbl();

--3 crie uma store procedure chamada proc_novoprojeto que adiciona um novo projeto na tabela tbl_projetos
--recebe como parametros o nome do projeto e o codigo do departamento
CREATE OR REPLACE PROCEDURE proc_novoprojeto(nome_projeto TEXT, cod_depart INT)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO tbl_projetos (nome, cod_departamento)
    VALUES (nome_projeto, cod_depart);
END;
$$;
CALL proc_novoprojeto('Projeto X', 1);


--4 crie uma store procedure chamada proc_delprojeto que deleta um projeto da tbl_projetos
-- recebe como parametro o codigo do projeto
CREATE OR REPLACE PROCEDURE proc_delprojeto(cod_projeto INT)
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM tbl_projetos
    WHERE cod_projeto = cod_projeto;
END;
$$;
CALL proc_delprojeto(1);


--5 crie uma store procedure chamada proc_projeto_arquivado que recebe o codigo de um projeto.
--a procedure devera criar uma tabela chamada tbl_projetos_arquivados, caso ela nao exista. tabela deve ter 2 colunas: codigo_projeto e nome.
--a procedure deve salvar o projeto do codigo recebido na tbl_projetos_arquivados e deleta-la da tabela tbl_projetos.

CREATE OR REPLACE PROCEDURE proc_projeto_arquivado(cod_projeto INT)
LANGUAGE plpgsql
AS $$
BEGIN
    -- Cria a tabela tbl_projetos_arquivados se ela n√£o existir
    EXECUTE 'CREATE TABLE IF NOT EXISTS tbl_projetos_arquivados (
                codigo_projeto INT PRIMARY KEY,
                nome TEXT
             )';

    -- Insere o projeto na tabela de arquivados
    INSERT INTO tbl_projetos_arquivados (codigo_projeto, nome)
    SELECT cod_projeto, nome
    FROM tbl_projetos
    WHERE cod_projeto = cod_projeto;

    -- Deleta o projeto da tabela tbl_projetos
    DELETE FROM tbl_projetos
    WHERE cod_projeto = cod_projeto;
END;
$$;

CALL proc_projeto_arquivado(1);



